{"version":3,"sources":["images/logo.svg","sprites/boltorange-250-min.png","sprites/boltred-250-min.png","sprites/boltyellow-250-min.png","sprites/virusunknown-250-min.png","sprites/ship-min.png","sprites/virusorange-250-min.png","sprites/virusyellow-250-min.png","sprites/virusred-250-min.png","components/startScreen.jsx","components/endScreen.jsx","sprites/virusdead-250-min.png","sprites/virusorange-250-2-min.png","sprites/virusorange-250-3-min.png","sprites/virusorange-250-4-min.png","sprites/virusorange-250-5-min.png","sprites/virusyellow-250-2-min.png","sprites/virusyellow-250-3-min.png","sprites/virusyellow-250-4-min.png","sprites/virusyellow-250-5-min.png","sprites/virusred-250-2-min.png","sprites/virusred-250-3-min.png","sprites/virusred-250-4-min.png","sprites/virusred-250-5-min.png","components/matterComp.jsx","sounds/laser1.mp3","sounds/laser2.mp3","sounds/laser3.mp3","sounds/hit.mp3","sounds/phit.mp3","components/gameScreen.jsx","App.js","reportWebVitals.js","index.js"],"names":["StartScreen","props","messagePool","startGame","className","id","style","fontWeight","marginTop","marginBottom","height","width","position","top","left","transform","src","spriteship","alt","display","flexDirection","justifyContent","objectFit","paddingRight","boltyellow","right","spriteyellow","String","introMessages","split","map","p","i","trim","length","spritered","boltred","margin","spriteorange","boltorange","spritegrey","onClick","zIndex","backgroundImage","logo","backgroundRepeat","backgroundPosition","EndScreen","restartGame","score","scores","antibioticsWasted","yellow","wasteMessages","orange","red","unidentifiedBugs","hit","unidentifiedPenMessages","ignored","unidentifiedBonMessages","outroMessages","MatterComp","sprites","useMemo","spriteyellow1","spriteyellow2","spriteyellow3","spriteyellow4","spritered1","spritered2","spritered3","spritered4","spriteorange1","spriteorange2","spriteorange3","spriteorange4","spriteblue","shotCount","setShotCount","timer","setScores","soundOn","phit","fired","rotating","changeScore","bugLevels","setBugLevels","engineRef","useRef","Engine","create","matterBox","shipRef","rotateInterval","bugInterval","useEffect","Object","keys","forEach","s","newImage","Image","window","engine","current","render","Render","element","options","wireframes","background","circle","Bodies","fillStyle","lineWidth","strokeStyle","label","isSensor","Body","scale","circle2","circle3","World","add","world","sprite","texture","xScale","yScale","shipCircle","ship","gravity","x","y","rotate","Math","PI","Runner","run","stop","clear","canvas","remove","context","textures","interval","setInterval","bodies","b","newScores","clearInterval","startFiringBugs","bugCount","filter","includes","random","color","floor","baseangle","angle","bug","cos","sin","JSON","stringify","state","misses","friction","frictionAir","force","applyForce","checkForActiveTab","document","hidden","addEventListener","removeEventListener","updateBugLevels","newLevels","newLevel","startsWith","bugData","parse","Events","on","event","pairs","bodyA","bodyB","setVelocity","velocity","off","newShotCount","bolt","inertia","Infinity","ref","GameScreen","setRotating","setFired","setScore","useSound","laser1Sfx","laser1","laser2Sfx","laser2","laser3Sfx","laser3","hitSfx","phitSfx","useCallback","direction","stopRotate","fireYellow","e","preventDefault","fireOrange","fireRed","handleUserKeyPress","key","toLowerCase","handleUserKeyUp","round","change","onTouchCancel","onTouchEnd","onTouchStart","onMouseDown","onMouseUp","onMouseLeave","RotateLeft","RotateRight","borderWidth","require","App","ReactGA","initialize","pageview","location","pathname","search","useState","setSoundOn","gameState","setGameState","timerStart","setTimerStart","setTimer","setMessagePool","Date","now","timeout","setTimeout","clearTimeout","messages","parser","delimiter","record","read","type","push","err","console","error","message","fetch","then","response","text","csvdata","data","d","write","loadMessageData","end","displayGameState","VolumeUp","VolumeOff","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.51c88895.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.c1ccbc7f.svg\";","export default __webpack_public_path__ + \"static/media/boltorange-250-min.30a23da4.png\";","export default __webpack_public_path__ + \"static/media/boltred-250-min.c3e0ec52.png\";","export default __webpack_public_path__ + \"static/media/boltyellow-250-min.4f1796d7.png\";","export default __webpack_public_path__ + \"static/media/virusunknown-250-min.70469fdd.png\";","export default __webpack_public_path__ + \"static/media/ship-min.3bd03998.png\";","export default __webpack_public_path__ + \"static/media/virusorange-250-min.21507a75.png\";","export default __webpack_public_path__ + \"static/media/virusyellow-250-min.82c6230b.png\";","export default __webpack_public_path__ + \"static/media/virusred-250-min.a67f86ef.png\";","import ReactMarkdown from 'react-markdown'\nimport logo from './../images/logo.svg'\n\nimport boltorange from './../sprites/boltorange-250-min.png'\nimport boltred from './../sprites/boltred-250-min.png'\nimport boltyellow from './../sprites/boltyellow-250-min.png'\n\nimport spritegrey from './../sprites/virusunknown-250-min.png'\n\nimport spriteship from './../sprites/ship-min.png'\nimport spriteorange from './../sprites/virusorange-250-min.png'\nimport spriteyellow from './../sprites/virusyellow-250-min.png'\nimport spritered from './../sprites/virusred-250-min.png'\n\n\nfunction StartScreen (props) {\n\n  const {messagePool, startGame} = props\n\n  \n\n  return (\n   <> \n         <h1 className=\"title\">BATTLING THE BUGS</h1>\n         <div id=\"instructions\" >\n         <p style={{\n      fontWeight: 700,\n      marginTop: \"0.25em\",\n      marginBottom: \"0.5em\"\n\n    }}>INSTRUCTIONS</p>\n         <div style={{\n           height: \"3em\",\n           width: \"100%\",\n           position: \"relative\"\n         }}>\n                    <div style={{\n           height: \"3em\",\n           position: \"absolute\",\n           top: 0,\n           left: \"25%\"\n         }}>\n\n           <img style={{\n           height: \"100%\",\n           transform: \"rotate(180deg)\"\n         }} src={spriteship} alt=\"\" />\n\n</div>\n\n         <div style={{\n           height: \"3em\",\n           display: \"flex\",\n           flexDirection: \"column\",\n           justifyContent: \"center\"\n\n\n         }}>\n         <img style={{\n          height: \"50%\",\n          objectFit: \"contain\",\n          paddingRight: \"12%\",\n          transform: \"rotate(180deg)\",\n        }} src={boltyellow} alt=\"\" />\n        \n        </div>\n        <div style={{\n           height: \"3em\",\n           position: \"absolute\",\n           top: 0,\n           right: \"25%\"\n         }}>\n\n          <img style={{\n          height: \"100%\"\n        \n        }} src={spriteyellow} alt=\"\" />\n                </div>\n\n        </div>\n \n   {String(messagePool.introMessages[0][0]).split(\"<<\").map ( (p, i) =>\n    \n\np.trim().length > 0 ? \n       <div key={i}> {i === 2 ? \n        <div style={{\n          height: \"3em\",\n          width: \"70%\",\n          left: \"15%\",\n          position: \"relative\"\n        }}>\n                   <div style={{\n          height: \"3em\",\n          position: \"absolute\",\n          top: 0,\n          left: \"15%\"\n        }}>\n\n          <img style={{\n          height: \"100%\",\n        }} src={spriteyellow} alt=\"\" />\n        <img style={{\n          position: \"relative\",\n          top: \"-25%\",\n          left: \"15%\",\n          height: \"50%\",\n        }} src={boltyellow} alt=\"\" />\n\n</div>\n\n\n\n<div style={{\n          height: \"3em\",\n          position: \"absolute\",\n          top: 0,\n          right: \"15%\"\n        }}>\n\n          <img style={{\n          height: \"100%\",\n        }} src={spritered} alt=\"\" />\n<img style={{\n          position: \"relative\",\n          top: \"-25%\",\n          left: \"15%\",\n          height: \"50%\",\n        }} src={boltred} alt=\"\" />\n</div>\n</div>\n\n       \n       \n       : \"\"}\n\n{i === 4 ? \n        <div style={{\n          height: \"3em\",\n          width: \"100%\",\n          position: \"relative\"\n        }}>\n                  <div style={{\n          height: \"3em\",\n          margin: \"auto\"\n        }}>\n\n          <img style={{\n          height: \"100%\",\n        }} src={spriteorange} alt=\"\" />\n        <img style={{\n          position: \"relative\",\n          top: \"-25%\",\n          left: \"2%\",\n          height: \"50%\",\n          transform: 'rotate(180deg)'\n        }} src={boltorange} alt=\"\" />\n\n</div>\n\n\n</div>\n\n       \n       : \"\"}\n{i === 6 ? \n        <div style={{\n          height: \"3em\",\n          width: \"100%\",\n          position: \"relative\"\n        }}>\n                   <div style={{\n          height: \"3em\",\n          margin: \"auto\"\n        }}>\n\n          <img style={{\n          height: \"100%\",\n        }} src={spritegrey} alt=\"\" />\n        \n\n</div>\n\n\n</div>\n\n       \n       : \"\"}\n\n\n    <ReactMarkdown>{p}</ReactMarkdown>\n    </div>\n   : \"\")\n}\n\n</div>\n    <div onClick={startGame} className=\"startButton\" ><span>START</span></div>\n          \n    <div id=\"logo\" style={{\n   marginTop: \"0.5em\",\n   width: \"100%\",\n   zIndex: -1,\n    backgroundImage: `url(${logo})`,\n    backgroundRepeat: \"no-repeat\",\n    backgroundPosition: \"center\"\n  }}></div>\n    </>\n   \n  )\n}\n\nexport default StartScreen","import ReactMarkdown from 'react-markdown'\nimport boltorange from './../sprites/boltorange-250-min.png'\nimport boltred from './../sprites/boltred-250-min.png'\nimport boltyellow from './../sprites/boltyellow-250-min.png'\nimport spritegrey from './../sprites/virusunknown-250-min.png'\nimport logo from './../images/logo.svg'\n\nfunction EndScreen (props) {\n\n  const {messagePool, restartGame, score, scores} = props\n\n  const totalScore = () => {\n    return (score + \n      scores.antibioticsWasted.red * messagePool.wasteMessages[0][1] + \n      scores.antibioticsWasted.orange * messagePool.wasteMessages[0][1] + \n      scores.antibioticsWasted.red * messagePool.wasteMessages[0][1] +\n      scores.unidentifiedBugs.hit * messagePool.unidentifiedPenMessages[0][1] +\n      scores.unidentifiedBugs.ignored * messagePool.unidentifiedBonMessages[0][1]\n    )\n  }\n\n\n  return (\n   \n   scores && messagePool ? <>\n         <h1>Battling the Bugs</h1>\n\n   <p id=\"initialEndScore\">You scored {score}!</p>\n\n   <p className=\"scoreSectionHead\">Penalties</p>\n   <div>\n\n    <div className=\"scoreLine\"><div className=\"scoreEndS\">{scores.antibioticsWasted.yellow}</div><div className=\"scoreBug\" style={{\n          backgroundImage: `url(${boltyellow})`,\n        }}></div><div className=\"scoreText\">antibiotic{scores.antibioticsWasted.yellow === 1 ? \"\" : \"s\"}  wasted: {scores.antibioticsWasted.yellow * messagePool.wasteMessages[0][1]} points</div></div>\n  \n    <div className=\"scoreLine\"><div className=\"scoreEndS\">{scores.antibioticsWasted.orange}</div><div className=\"scoreBug\"style={{\n          backgroundImage: `url(${boltorange})`,\n          transform: `rotate(180deg)`\n\n        }}></div><div className=\"scoreText\">antibiotic{scores.antibioticsWasted.orange === 1 ? \"\" : \"s\"}  wasted: {scores.antibioticsWasted.orange * messagePool.wasteMessages[0][1]} points</div></div>\n       <div className=\"scoreLine\"><div className=\"scoreEndS\">{scores.antibioticsWasted.red}</div><div className=\"scoreBug\" style={{\n          backgroundImage: `url(${boltred})`\n        }}></div><div className=\"scoreText\">antibiotic{scores.antibioticsWasted.red === 1 ? \"\" : \"s\"} wasted: {scores.antibioticsWasted.red * messagePool.wasteMessages[0][1]} points</div></div>\n  \n   </div>\n   <div className=\"learning\">    {String(messagePool.wasteMessages[0][0]).split(\"<<\").map ( (p,i) =>\n  p.trim().length > 0 ? \n    \n    <ReactMarkdown key={i}>{p}</ReactMarkdown>\n    \n   : <p key={i} className=\"spacer\"></p>)\n}</div>\n  \n\n   <div className=\"scoreLine\"><div className=\"scoreEndS\">{scores.unidentifiedBugs.hit}</div><div className=\"scoreBug\" style={{\n          backgroundImage: `url(${spritegrey})`\n        }}></div><div className=\"scoreText\">unidentified bug{scores.unidentifiedBugs.hit === 1 ? \"\" : \"s\"} hit: {scores.unidentifiedBugs.hit * messagePool.unidentifiedPenMessages[0][1]} points</div></div>\n  \n \n  <div className=\"learning\">  {String(messagePool.unidentifiedPenMessages[0][0]).split(\"<<\").map ( (p,i) =>\n  p.trim().length > 0 ? \n    \n    <ReactMarkdown key={i}>{p}</ReactMarkdown>\n    \n  : <p key={i} className=\"spacer\"></p>) \n}</div>\n   <p className=\"scoreSectionHead\" >Bonus points</p>\n   \n   <div className=\"scoreLine\"><div className=\"scoreEndS\">{scores.unidentifiedBugs.ignored}</div><div className=\"scoreBug\" style={{\n          backgroundImage: `url(${spritegrey})`\n        }}></div><div className=\"scoreText\">unidentified bug{scores.unidentifiedBugs.ignored === 1 ? \"\" : \"s\"} ignored: {scores.unidentifiedBugs.ignored * messagePool.unidentifiedBonMessages[0][1]} points</div></div>\n  \n   \n  <div className=\"learning\"> {String(messagePool.unidentifiedBonMessages[0][0]).split(\"<<\").map ( (p,i) =>\n  p.trim().length > 0 ? \n    \n    <ReactMarkdown key={i}>{p}</ReactMarkdown>\n    \n: <p key={i} className=\"spacer\"></p>)\n}</div>\n    \n    <p className=\"scoreSectionHead\">Total score</p>\n    <p className=\"finalEndScore\">{totalScore()}</p>\n\n   <div className=\"learning\"> {String(messagePool.outroMessages[0][0]).split(\"<<\").map ( (p,i) =>\n  p.trim().length > 0 ? \n    \n    <ReactMarkdown key={i}>{p}</ReactMarkdown>\n    \n     : <p key={i} className=\"spacer\"></p>)\n}</div> \n   <div onClick={restartGame}  className=\"startButton endButton\" ><span>RESTART</span></div>\n   <div id=\"logo\" style={{\n   marginTop: \"0.5em\",\n   width: \"100%\",\n   zIndex: -1,\n    backgroundImage: `url(${logo})`,\n    backgroundRepeat: \"no-repeat\",\n    backgroundPosition: \"center\"\n  }}></div>\n   \n   </>\n   \n   \n   : \"\"\n   \n  )\n}\n\nexport default EndScreen","export default __webpack_public_path__ + \"static/media/virusdead-250-min.996b9e64.png\";","export default __webpack_public_path__ + \"static/media/virusorange-250-2-min.f596d187.png\";","export default __webpack_public_path__ + \"static/media/virusorange-250-3-min.a784d477.png\";","export default __webpack_public_path__ + \"static/media/virusorange-250-4-min.2d65b402.png\";","export default __webpack_public_path__ + \"static/media/virusorange-250-5-min.c0f0a501.png\";","export default __webpack_public_path__ + \"static/media/virusyellow-250-2-min.d6489858.png\";","export default __webpack_public_path__ + \"static/media/virusyellow-250-3-min.ae47b29e.png\";","export default __webpack_public_path__ + \"static/media/virusyellow-250-4-min.25b8723f.png\";","export default __webpack_public_path__ + \"static/media/virusyellow-250-5-min.711570b2.png\";","export default __webpack_public_path__ + \"static/media/virusred-250-2-min.84d33a8f.png\";","export default __webpack_public_path__ + \"static/media/virusred-250-3-min.13d50263.png\";","export default __webpack_public_path__ + \"static/media/virusred-250-4-min.6d06f0db.png\";","export default __webpack_public_path__ + \"static/media/virusred-250-5-min.2b3e9507.png\";","import { useEffect, useRef, useMemo} from 'react'\nimport { Body, Events, Engine, Render, Runner, Bodies, World } from 'matter-js'\n\nimport spriteblue from './../sprites/virusdead-250-min.png'\nimport spritegrey from './../sprites/virusunknown-250-min.png'\nimport spriteorange from './../sprites/virusorange-250-min.png'\nimport spriteorange1 from './../sprites/virusorange-250-2-min.png'\nimport spriteorange2 from './../sprites/virusorange-250-3-min.png'\nimport spriteorange3 from './../sprites/virusorange-250-4-min.png'\nimport spriteorange4 from './../sprites/virusorange-250-5-min.png'\n\nimport spriteyellow from './../sprites/virusyellow-250-min.png'\nimport spriteyellow1 from './../sprites/virusyellow-250-2-min.png'\nimport spriteyellow2 from './../sprites/virusyellow-250-3-min.png'\nimport spriteyellow3 from './../sprites/virusyellow-250-4-min.png'\nimport spriteyellow4 from './../sprites/virusyellow-250-5-min.png'\n\nimport spritered from './../sprites/virusred-250-min.png'\nimport spritered1 from './../sprites/virusred-250-2-min.png'\nimport spritered2 from './../sprites/virusred-250-3-min.png'\nimport spritered3 from './../sprites/virusred-250-4-min.png'\nimport spritered4 from './../sprites/virusred-250-5-min.png'\n\nimport spriteship from './../sprites/ship-min.png'\nimport boltorange from './../sprites/boltorange-250-min.png'\nimport boltred from './../sprites/boltred-250-min.png'\nimport boltyellow from './../sprites/boltyellow-250-min.png'\n\n\nconst MatterComp = (props) => {\n\n\n  const sprites =  useMemo(() => {return {\n    \"yellow\": spriteyellow,\n    \"yellow1\": spriteyellow1,\n    \"yellow2\": spriteyellow2,\n    \"yellow3\": spriteyellow3,\n    \"yellow4\": spriteyellow4,\n    \"red\": spritered,\n    \"red1\": spritered1,\n    \"red2\": spritered2,\n    \"red3\": spritered3,\n    \"red4\": spritered4,\n    \"orange\": spriteorange,\n    \"orange1\": spriteorange1,\n    \"orange2\": spriteorange2,\n    \"orange3\": spriteorange3,\n    \"orange4\": spriteorange4,\n    \"blue\": spriteblue,\n    \"grey\": spritegrey,\n    \"ship\": spriteship,\n    \"boltorange\": boltorange,\n    \"boltred\": boltred,\n    \"boltyellow\": boltyellow\n  }},[])\n\n  const {shotCount, setShotCount, timer,scores, setScores, soundOn, hit, phit, fired, rotating, changeScore,bugLevels,setBugLevels} = props\n\n  const engineRef = useRef(Engine.create({}))\n  const matterBox = useRef(false)\n  const shipRef = useRef(false)\n  const rotateInterval = useRef(false)\n  const bugInterval = useRef(false)\n\n  useEffect(() => {\n    if (sprites) {\n      Object.keys(sprites).forEach(s => {\n        const newImage = new Image();\n        newImage.src = sprites[s];\n        window[s] = newImage;\n      })\n    }\n  },[sprites])\n\n  useEffect(() => {\n\n    \n    let engine = engineRef.current\n    //const cw = document.body.clientWidth\n    //const ch = document.body.clientHeight\n\n    const render = Render.create({\n      element: matterBox.current,\n      engine: engine,\n      options: {\n        width: 1000,\n        height: 1000,\n        wireframes: false,\n        background: \"#2a2a2a\"\n      }\n    })\n\n    let circle = Bodies.circle(500, 500, 420, {render: {\n      fillStyle: \"none\",\n      lineWidth: 0,\n      strokeStyle: \"white\"\n    }\n    });\n    circle.label = \"circle1\"\n    circle.isSensor = true\n    Body.scale(circle, 1.5, 1 )\n\n    let circle2 = Bodies.circle(500, 500, 320, {render: {\n      fillStyle: \"none\",\n      lineWidth: 0,\n      strokeStyle: \"white\"\n    }\n    });\n    circle2.label = \"circle2\"\n    circle2.isSensor = true\n    Body.scale(circle2, 1.5, 1 )\n\n\n    let circle3 = Bodies.circle(500, 500, 220, {render: {\n      fillStyle: \"none\",\n      lineWidth: 0,\n      strokeStyle: \"white\"\n    }\n    });\n    circle3.label = \"circle3\"\n    circle3.isSensor = true\n    Body.scale(circle3, 1.5, 1 )\n\n    World.add(engine.world, [circle])\n\n    World.add(engine.world, [circle2])\n    World.add(engine.world, [circle3])\n\n\n    shipRef.current = Bodies.circle(500, 500, 50, {render: {\n      fillStyle: \"gray\",\n      lineWidth: 0,\n      strokeStyle: \"white\",\n      sprite: {  \n        texture: sprites[\"ship\"],\n        xScale: 1/2,\n        yScale: 1/2\n      }\n    }\n    });\n\n    let shipCircle = Bodies.circle(500, 500, 50, {render: {\n      fillStyle: \"none\",\n      lineWidth: 0,\n      strokeStyle: \"white\"\n    }\n    });\n    shipCircle.label = \"shipCircle\"\n\n    shipCircle.isSensor = true\n    World.add(engine.world, [shipCircle])\n    let ship = shipRef.current\n    ship.isSensor = true\n\n    engine.gravity.x = 0;\n    engine.gravity.y = 0;\n\n    Body.rotate(ship, Math.PI )\n    Body.scale(ship, 1.2, 0.7 )\n\n    World.add(engine.world, [ship])\n    Runner.run(engine)\n    Render.run(render)\n\n    \n    \n    \n    \n    \n    \n\n\n\n \n    return () => {\n      Render.stop(render)\n      World.clear(engine.world)\n      Engine.clear(engine)\n      render.canvas.remove()\n      render.canvas = null\n      render.context = null\n      render.textures = {}\n     \n    }\n  }, [sprites])\n\n\n  useEffect(() => {\n    let engine = engineRef.current\n    let interval = setInterval(() => {\n      engine.world.bodies.forEach(b => {\n\n        if (b.position.x > 1000 || b.position.x < 0 || b.position.y > 1000 || b.position.y < 0 ) {\n          if (b.label === \"bolt\") {\n            let newScores = {...scores};\n            newScores.antibioticsWasted[b.render.fillStyle] = scores.antibioticsWasted[b.render.fillStyle] + 1\n            setScores(newScores)\n          }\n          World.remove(engine.world, b);\n        }\n      })\n    },1000/30)\n    return () => {\n      clearInterval(interval)\n    }\n  },[setScores,scores])\n\n  useEffect(() => {\n    let engine = engineRef.current\n\n    const startFiringBugs = () => {\n      bugInterval.current = setInterval(() => {\n        let bugCount = engine.world.bodies.filter(b => b.label.includes(\"bug\")).length\n        if (bugCount === 0 || (Math.random() >= 1/2 && bugCount < 9)) {\n          let color = [\"yellow\",\"orange\",\"red\"][Math.floor(Math.random()*3)]\n          let baseangle = Math.random() * 360\n          while (!((baseangle >= 120 && baseangle <= 240) || baseangle <= 60 || baseangle >= 300)) {\n            baseangle = Math.random() * 360\n          }\n\n          \n            let angle = (-90 + baseangle) * Math.PI/180\n            let bug = Bodies.circle(500 - Math.cos(angle) * 500,500 - Math.sin(angle)* 500, 50, {  render: {\n              fillStyle: \"grey\",\n              strokeStyle: \"white\",\n              lineWidth: 0,\n              sprite: {  \n                texture: sprites[\"grey\"],\n                xScale: 1/3,\n                yScale: 1/3\n              }\n\n            }});\n            bug.label = \"bug_\" + JSON.stringify({color: color, state: 0, misses: bugLevels[color]})\n            bug.friction = 0\n            bug.frictionAir = 0\n            bug.isSensor = true\n            World.add(engine.world, [bug]);\n            let force = timer <= 57 ? 0.03 + (60 - timer)/1000 : 0.03\n        \n\n            Body.applyForce(bug, {x: bug.position.x, y: bug.position.y}, {x: Math.cos(angle) * force, y:  Math.sin(angle) * force})\n          }\n        \n      },1000)\n    }\n\n    const checkForActiveTab = () => {\n      if(document.hidden) {\n        clearInterval(bugInterval.current)\n      }\n      else {\n        startFiringBugs()\n      }\n    }\n    startFiringBugs()\n    document.addEventListener('visibilitychange', checkForActiveTab)\n\n    return () => {\n      clearInterval(bugInterval.current)\n      document.removeEventListener('visibilitychange', checkForActiveTab)\n  }},[bugLevels,sprites,timer])\n\n  useEffect(()=> {\n    let engine = engineRef.current\n\n    const updateBugLevels = (color) => {\n      let newLevels = {...bugLevels};\n      let newLevel = newLevels[color] === 4 ? 4 : newLevels[color] + 1\n      newLevels[color] = newLevel\n      setBugLevels(newLevels)\n      engine.world.bodies.filter(b => b.label.startsWith(\"bug_\") ).forEach(b => { \n        let bugData = JSON.parse(b.label.split(\"_\")[1])\n        if (bugData.color === color && bugData.misses < newLevel) bugData.misses = newLevel\n        b.label = \"bug_\" + JSON.stringify(bugData)\n      })\n    }\n\n    Events.on(engine, 'collisionStart', function(event) {\n      event.pairs.forEach(({ bodyA, bodyB }) => {\n        if (bodyA.label.startsWith(\"circle\") && bodyB.label.startsWith(\"bug_\")) {\n          let bugData = JSON.parse(bodyB.label.split(\"_\")[1])\n          if (bugData.state === 0 && (Math.random() <= 1/3 ) ){\n            bodyB.render.sprite.texture = sprites[bugData.color]\n\n            if (bugData.misses === 4) {\n              bodyB.render.sprite.texture = sprites[bugData.color + \"4\"]\n            } else\n            if (bugData.misses === 3) {\n              bodyB.render.sprite.texture = sprites[bugData.color + \"3\"]\n            } else\n            if (bugData.misses === 2) {\n              bodyB.render.sprite.texture = sprites[bugData.color + \"2\"]\n            } else\n            if (bugData.misses === 1) {\n              bodyB.render.sprite.texture = sprites[bugData.color + \"1\"]\n            } else {\n              bodyB.render.sprite.texture = sprites[bugData.color]\n            }\n\n            bugData.state = 1\n            bodyB.label = \"bug_\" + JSON.stringify(bugData)\n          }\n        } else \n        if (bodyA.label === \"shipCircle\" && bodyB.label.startsWith(\"bug_\")){\n          let bugData = JSON.parse(bodyB.label.split(\"_\")[1])\n          if (bugData.state === 3) {\n            changeScore(200)\n          } else if (bodyB.render.sprite.texture === spritegrey) {\n\n            let newScores = {...scores};\n            newScores.unidentifiedBugs.ignored = newScores.unidentifiedBugs.ignored + 1\n            setScores(newScores)\n            \n          } else {\n            if (soundOn) phit() \n            changeScore(-100)\n          }\n          World.remove(engine.world, bodyB);\n        } else\n        if (bodyA.label.startsWith(\"bug_\") && bodyB.label === \"bolt\") {\n          let bugData = JSON.parse(bodyA.label.split(\"_\")[1])\n          if (bugData.state !== 3) {\n            World.remove(engine.world, bodyB);\n          }\n          if (bugData.state === 3) {\n          } else\n          if (bugData.color === String(bodyB.render.fillStyle) && bodyA.render.sprite.texture === spritegrey) {\n\n            let newScores = {...scores};\n            newScores.unidentifiedBugs.hit = newScores.unidentifiedBugs.hit + 1\n            setScores(newScores)\n           \n            bugData.state = 3\n            bodyA.label = \"bug_\" + JSON.stringify(bugData)\n          } else\n          if (bugData.color === String(bodyB.render.fillStyle) && bugData.misses > 0) {\n            bugData.misses -= 1\n            bodyA.label = \"bug_\" + JSON.stringify(bugData)\n          } else\n          if (bugData.color === String(bodyB.render.fillStyle)) {\n            bugData.state = 3\n            bodyA.label = \"bug_\" + JSON.stringify(bugData)\n            if (soundOn)  hit()\n          } else\n          if (!bugData.misses || bugData.misses === 0) {\n            \n              let newScores = {...scores};\n              newScores.antibioticsWasted[bodyB.render.fillStyle] = scores.antibioticsWasted[bodyB.render.fillStyle] + 1\n              setScores(newScores)\n           \n              bugData.misses = 1\n              updateBugLevels(bugData.color)\n          \n              bugData.state = 1\n              bodyA.label = \"bug_\" + JSON.stringify(bugData)\n          } else if (bugData.misses < 4) {\n            \n\n              let newScores = {...scores};\n              newScores.antibioticsWasted[bodyB.render.fillStyle] = newScores.antibioticsWasted[bodyB.render.fillStyle] + 1\n              setScores(newScores)\n              bugData.misses += 1\n              updateBugLevels(bugData.color)\n\n           \n              bugData.state = 1\n              bodyA.label = \"bug_\" + JSON.stringify(bugData)\n          } else {\n            bugData.misses = 4\n            bugData.state = 1\n            bodyA.label = \"bug_\" + JSON.stringify(bugData)\n        }\n          \n          if (bugData.state === 3) {\n\n            bodyA.render.sprite.texture = sprites[\"blue\"]\n            bodyA.render.sprite.xScale = 1/8\n            bodyA.render.sprite.yScale = 1/8\n            Body.setVelocity(bodyA, {x: bodyA.velocity.x * 8,\n              y: bodyA.velocity.y * 8\n              \n            })\n          } else\n          if (bugData.misses === 4) {\n            bodyA.render.sprite.texture = sprites[bugData.color + \"4\"]\n          } else\n          if (bugData.misses === 3) {\n            bodyA.render.sprite.texture = sprites[bugData.color + \"3\"]\n          } else\n          if (bugData.misses === 2) {\n            bodyA.render.sprite.texture = sprites[bugData.color + \"2\"]\n          } else\n          if (bugData.misses === 1) {\n            bodyA.render.sprite.texture = sprites[bugData.color + \"1\"]\n          } else {\n            bodyA.render.sprite.texture = sprites[bugData.color]\n          }\n\n\n        \n      }\n     });\n    })\n    return () => Events.off(engine, 'collisionStart')\n  },[timer,changeScore,hit,phit,sprites,bugLevels,setBugLevels,soundOn,setScores,scores])\n\n\n  useEffect(()=> {\n    let engine = engineRef.current\n    let ship = shipRef.current\n\n    if (fired) {\n      let newShotCount = {...shotCount}\n      newShotCount[fired] = newShotCount[fired] += 1\n      setShotCount(newShotCount)\n      let bolt = Bodies.circle(500 - Math.cos(ship.angle) * 10 * 3/5, 500 - Math.sin(ship.angle) * 10 * 3/5, 5, { inertia: Infinity, render: {\n        fillStyle: fired,\n        strokeStyle: \"white\",\n        lineWidth: 0,\n        sprite: {  \n          texture: sprites[\"bolt\" + fired],\n          xScale: 1/4,\n          yScale: 1/4\n        }\n      } });\n      bolt.label = \"bolt\"\n      bolt.friction = 0\n      bolt.frictionAir = 0\n      Body.rotate(bolt, ship.angle)\n      Body.applyForce(bolt, {x: bolt.position.x, y: bolt.position.y}, {x: -Math.cos(ship.angle) * 0.0025, y: -Math.sin(ship.angle) * 0.0025})\n      World.add(engine.world, [bolt]);\n    }\n\n    if (rotating) {\n      rotateInterval.current = setInterval(()=> {\n        Body.rotate(ship, rotating * Math.PI / 22.5)\n        \n      },1000/30)\n    }\n\n    return () => {\n      clearInterval(rotateInterval.current)\n    }\n  },[fired,rotating, sprites,setShotCount])\n\n\n\n \n  return (\n    <>\n    <div id=\"matterBox\" ref={matterBox}  />\n    </>\n  )\n}\n\nexport default MatterComp","export default __webpack_public_path__ + \"static/media/laser1.b17a6cd2.mp3\";","export default __webpack_public_path__ + \"static/media/laser2.dd6ba7b5.mp3\";","export default __webpack_public_path__ + \"static/media/laser3.cb373881.mp3\";","export default __webpack_public_path__ + \"static/media/hit.11c7d929.mp3\";","export default __webpack_public_path__ + \"static/media/phit.95a24661.mp3\";","import MatterComp from './matterComp.jsx'\nimport { useEffect, useCallback} from 'react'\nimport { RotateLeft, RotateRight } from '@material-ui/icons';\nimport useSound from 'use-sound';\n\nimport laser1Sfx from './../sounds/laser1.mp3';\nimport laser2Sfx from './../sounds/laser2.mp3';\nimport laser3Sfx from './../sounds/laser3.mp3';\nimport hitSfx from './../sounds/hit.mp3';\nimport phitSfx from './../sounds/phit.mp3';\n\nimport boltorange from './../sprites/boltorange-250-min.png'\nimport boltred from './../sprites/boltred-250-min.png'\nimport boltyellow from './../sprites/boltyellow-250-min.png'\n\nfunction GameScreen (props) {\n\n\n  const {shotCount, setShotCount, scores,setScores, soundOn, bugLevels, setBugLevels, timer, setRotating,rotating,setFired,fired,score,setScore} = props\n  \n  const [laser1] = useSound(laser1Sfx);\n  const [laser2] = useSound(laser2Sfx);\n  const [laser3] = useSound(laser3Sfx);\n  const [hit] = useSound(hitSfx);\n  const [phit] = useSound(phitSfx);\n\n  \n  const changeScore = (change) => {\n    setScore(score => score + change)\n  }\n  const rotate = useCallback((direction) => {\n    setRotating(direction)\n  }, [setRotating]);\n  \n\n  const stopRotate = useCallback(() => {\n    setRotating(false)\n  },[setRotating]);\n\n  const fireYellow = (e) => {\n    e.preventDefault()\n    if (!fired) {\n    setFired(\"yellow\")\n    if (soundOn)  laser1()\n    }\n  }\n\n  const fireOrange = (e) => {\n    e.preventDefault()\n    if (!fired) {\n    setFired(\"orange\")\n    if (soundOn)  laser3()\n    }\n  }\n\n  const fireRed = (e) => {\n    e.preventDefault()\n    if (!fired) {\n    setFired(\"red\")\n    if (soundOn) laser2()\n    }\n  }\n  \n\n  useEffect(() => {\n\n    const handleUserKeyPress = (e) => {\n      switch (e.key.toLowerCase()) {\n        case 'a':\n          rotate(-1)\n          break;\n        case 'd':\n          rotate(1)\n          break;\n        case 'j':\n          if (soundOn) laser1()\n          setFired(\"yellow\")\n          break;\n        case 'k':\n          if (soundOn) laser2()\n          setFired(\"orange\")\n          break;\n        case 'l':\n          if (soundOn) laser3()\n          setFired(\"red\")\n          break;\n        default: // Do nothing\n      }\n    }\n\n\n  \n    const handleUserKeyUp = (e) => {\n      switch (e.key.toLowerCase()) {\n        case 'a':\n          stopRotate()\n          break;\n        case 'd':\n          stopRotate()\n          break;\n        default: // Do nothing\n      }\n    }\n    window.addEventListener('keydown', handleUserKeyPress);\n    window.addEventListener('keyup', handleUserKeyUp);\n\n    if (fired) setFired(false)\n  \n    return () => {\n      window.removeEventListener('keydown', handleUserKeyPress)\n      window.addEventListener('keyup', handleUserKeyUp);\n\n    }\n  },[fired,setFired, rotate, stopRotate, laser1, laser2, laser3, soundOn])\n\n  return (\n    <>\n          <h1>BATTLING THE BUGS</h1>\n\n      <div id=\"scorebar\">\n        <div id=\"timer\">\n        {Math.round(timer)}\n        </div>\n        <div id=\"score\"><p>{score}</p></div>\n\n        </div>\n      <MatterComp shotCount={shotCount} setShotCount={setShotCount}  timer={Math.round(timer)} scores={scores} setScores={setScores} soundOn={soundOn} bugLevels={bugLevels} setBugLevels={setBugLevels} hit={hit} phit={phit} changeScore={changeScore} fired={fired} rotating={rotating} />\n      <div id=\"buttons\">\n        <div id=\"rbuttons\">\n          <div className=\"gbutton\">\n          <button  \n          onTouchCancel={stopRotate} onTouchEnd={stopRotate} onTouchStart={() => rotate(-1)}\n          onMouseDown={() => rotate(-1)} onMouseUp={stopRotate} onMouseLeave={stopRotate}  id=\"rotateL\"><RotateLeft />\n                    <div className=\"innerBorder\"> </div>\n\n          </button>\n          \n          <div className=\"letter\">A</div>\n          </div>\n          <div className=\"gbutton\">\n\n          <button  \n          onTouchCancel={stopRotate} onTouchEnd={stopRotate} onTouchStart={() => rotate(1)}\n          onMouseDown={() => rotate(1)} onMouseUp={stopRotate} onMouseLeave={stopRotate} className=\"rotate\"  id=\"rotateR\"><RotateRight />\n                              <div className=\"innerBorder\"> </div>\n\n          </button>\n          <div className=\"letter\">D</div>\n\n          </div>\n\n        </div>\n        <div id=\"fbuttons\">\n        <div className=\"gbutton\">\n\n        <button \n        onMouseUp={fireYellow}\n        onTouchEnd={fireYellow}\n        style={{\n          backgroundImage: `url(${boltyellow})`,\n\n        }}\n        \n        id=\"yellow\" className=\"fire\">\n\n<div className=\"innerBorder\" id=\"yellowBorder\"\n\nstyle={{\n  borderWidth: shotCount.yellow < 19 ? 10 - (shotCount.yellow/2) : 1\n}}\n></div><div className=\"evenInnerBorder\"\n\n\n></div>\n        </button>\n        <div className=\"letter\">J</div>\n\n        </div>\n\n        <div className=\"gbutton\">\n\n<button \nstyle={{\n  backgroundImage: `url(${boltorange})`,\n  transform: \"rotate(180deg)\"\n}}\nonMouseUp={fireOrange}\nonTouchEnd={fireOrange}\nid=\"orange\" className=\"fire\">\n  <div className=\"innerBorder\" id=\"orangeBorder\" style={{\nborderWidth: shotCount.orange < 19 ? 10 - (shotCount.orange/2) : 1\n}}\n></div><div className=\"evenInnerBorder\"\n\n\n></div>\n\n\n</button>\n<div className=\"letter\">L</div>\n\n</div>\n        <div className=\"gbutton\">\n\n        <button  \n        style={{\n          backgroundImage: `url(${boltred})`\n        }}\n        onMouseUp={fireRed}\n        onTouchEnd={fireRed}\n        id=\"red\" className=\"fire\">\n\n<div className=\"innerBorder\" id=\"redBorder\" \nstyle={{\n  borderWidth: shotCount.red < 19 ? 10 - (shotCount.red/2) : 1\n}}\n></div><div className=\"evenInnerBorder\"\n\n\n></div>\n\n        </button>\n        <div className=\"letter\">K</div>\n\n        </div>\n\n     \n\n        </div>\n      </div>\n    \n    </>\n  )\n}\n\nexport default GameScreen","import './App.css';\nimport { useEffect, useState } from 'react'\nimport StartScreen from './components/startScreen.jsx'\nimport EndScreen from './components/endScreen.jsx'\nimport GameScreen from './components/gameScreen.jsx'\nimport { VolumeOff, VolumeUp } from '@material-ui/icons';\nimport ReactGA from 'react-ga';\n\n\nconst parse = require('csv-parse')\n\n\nconst App = () => {\n\n  ReactGA.initialize('UA-214460310-1');\n  ReactGA.pageview(window.location.pathname + window.location.search);\n\n  const [score, setScore] = useState(0);\n  const [shotCount,setShotCount] = useState({\n    red: 0,\n    yellow: 0,\n    orange: 0,\n  })\n  const [scores,setScores] = useState({\n    antibioticsWasted: {\n      red: 0,\n      yellow: 0,\n      orange: 0,\n    },\n    unidentifiedBugs: {\n      hit: 0,\n      ignored: 0\n    }\n  })\n  const [soundOn,setSoundOn] = useState(true)\n\n  const [fired, setFired] = useState(false);\n  const [rotating, setRotating] = useState(false);\n  const [gameState, setGameState] = useState(0)\n  const [timerStart,setTimerStart] = useState(0)\n  const [timer,setTimer] = useState(0)\n  const [messagePool,setMessagePool] = useState(0)\n  const [bugLevels, setBugLevels] = useState({\n    red: 0,\n    yellow: 0,\n    orange: 0\n  });\n\n  const startGame = () => {\n    setGameState(1)\n    setScore(0)\n    setTimerStart(Date.now())\n    setBugLevels({\n      red: 0,\n      yellow: 0,\n      orange: 0\n    })\n    setShotCount({\n      red: 0,\n      yellow: 0,\n      orange: 0,\n    })\n    setScores({\n      antibioticsWasted: {\n        red: 0,\n        yellow: 0,\n        orange: 0,\n      },\n      unidentifiedBugs: {\n        hit: 0,\n        ignored: 0\n      }\n    })\n  }\n\n  const restartGame = () => {\n    setGameState(0)\n    setScore(0)\n    setBugLevels({\n      red: 0,\n      yellow: 0,\n      orange: 0\n    })\n  }\n\n  const displayGameState = (gameState) => {\n    if (gameState === 0) {\n      return <StartScreen messagePool={messagePool} startGame={startGame} />\n    } else\n    if (gameState === 1) {\n      return <GameScreen shotCount={shotCount} setShotCount={setShotCount}  scores={scores} setScores={setScores} soundOn={soundOn} bugLevels={bugLevels} setBugLevels={setBugLevels} timer={timer} score={score} setScore={setScore} fired={fired} setFired={setFired} rotating={rotating} setRotating={setRotating} />\n    } else {\n      return <EndScreen scores={scores} messagePool={messagePool} score={score} restartGame={restartGame} />\n    }\n  }\n\n  useEffect(() => {\n    let timeout\n    let timerLength = 60\n    if (gameState === 1 && timerLength-(Date.now()-timerStart)/1000 <= 0) {\n      setGameState(2)\n    } else \n    if (gameState === 1) {\n      timeout = setTimeout(() => {\n        setTimer(timerLength-(Date.now()-timerStart)/1000)\n      }, 100);\n    }\n    \n    return () => clearTimeout(timeout);\n\n  },[timerStart,timer,setTimer,gameState])\n\n\n  useEffect(() => {\n    if (!messagePool) {\n\n      const loadMessageData = (parser,data) => {\n        data.split(\"\\n\").forEach(d => \n          parser.write(d)\n        )\n      }\n        \n      let messages = {}\n      const parser = parse({\n        delimiter: ','\n      })\n\n      parser.on('readable', function(){\n        let record\n        // eslint-disable-next-line\n        while (record = parser.read()) {\n\n          let type = record[0]\n          if (!messages[`${type}Messages`]){\n            messages[`${type}Messages`] = []\n          }\n          messages[`${type}Messages`].push([record[1],record[2],record[3]])\n        }\n      })\n  \n      parser.on('error', function(err){\n        console.error(err.message)\n      })\n\n      const csvurl = \"https://docs.google.com/spreadsheets/d/e/2PACX-1vSn7iGyKPUFFi9akm3sWCIr-G5fyuepvj0BKD5yfYczuTygAka01lyouh25Z4xM3VJIh6YN695Egwia/pub?gid=0&single=true&output=csv\"\n      fetch(csvurl).then((response) => {\n        return response.text();\n      })\n      .then((csvdata) => {\n        \n        loadMessageData(parser,csvdata)\n        parser.end()\n        setMessagePool(messages)\n\n        \n      })\n    }\n  },[messagePool,setMessagePool])\n  const soundToggle = () => {\n    setSoundOn(soundOn ? false : true)\n  }\n\n  return (\n    <div className=\"App\">\n      \n      <div className=\"container\">\n      \n        {messagePool ? displayGameState(gameState) : \"\"}\n          <div id=\"volumecontrol\" onClick={soundToggle}>\n        {\n          soundOn ?  <VolumeUp /> : <VolumeOff />\n        }\n\n      </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}